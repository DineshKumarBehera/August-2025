Tricky Point (2025): try, catch, aur finally return statement Par Confusion
Interviewer mujhse order badal kar confuse karega. Woh poochhega, "Agar mein Exception ko sabse upar likh doon toh?" 
Mujhe bolna hai: "Program compile hi nahi hoga!" Compiler error dega ki 'exception has already been caught' kyunki Exception ek superclass hai jo sabko pakad legi, aur neeche ke specific blocks tak code kabhi pahunchega hi nahi.


Interviewer mujhse poochega: "Agar try, catch, aur finally teeno blocks mein return statement likha ho, toh method kaunsi value return karega?"

try {
    // some code
    return 1; 
} catch (Exception e) {
    return 2;
} finally {
    return 3;
}

Mujhe bolna hai: "Hamesha 3 return hoga! Compiler yeh dekhkar confuse nahi hoga, yeh ek well-defined rule hai. Jab try ya catch block ek return statement execute karne wala hota hai, JVM pehle check karta hai ki kya koi finally block hai. Agar finally block hai aur uske andar bhi ek return statement hai, toh woh (finally waala) return, original return ko override kar deta hai. finally ka faisla hi aakhri faisla maana jaata hai."

Kyunki yeh ek Tricky Point hai: Interviewer aapko is soch se confuse karne ki koshish karega ki "jab code try block mein return 1 tak pahunch gaya, toh use wahin se return ho jaana chahiye". Lekin Java ka rule saaf hai: method se nikalne se theek pehle finally block execute hoga, aur agar usne kuch return kiya, toh wahi final maana jaayega.

/\
|
|
|
|
|
Upar ke jese same pattern ko use karte huye niche ke Questions ko samjhaye.

```
What are memory Location present in JVM?

```


Explain as per its transliteration nature like below approach.

You have used a correct technique known as transliteration. In what technique do you use English letters, but their pronunciation sounds like Hindi? You may also refer to the technique as "English to Hindi transliteration" or "Romanized Hindi". What in nature, you write in technical terms and specific English but pronounce Hindi words in natural and practical language. This is a great way to help other people understand technical topics, especially when technical topics require grammar in Hindi.

Example : mai khana khata hun --> Looks like English letters but is pronounced like Hindi.
Aur Aap "Hinglish" ka istemaal kariye jismein hum Transliteration, Code-Mixing, aur Creative Neologism jaisi advanced techniques ko milaakar technical concepts ko aasan bana rahe hain.
Example:
instead of pronouns "aksharon" pronouns "Leteron".
"Humara core logic hi yahi hai."


sambodhit ish tarh nahi kijiye : 
for example:
"aap kehete hei" ke bajaen "mein keheta hun"
"aapako kehena hei" ke bajaen "mujhe kehena hei"  ...ish tarh se
"hum"  ke bajaen "mein"


Har baat ko sambodhit ish tarh nahi kijiye : 
"aap" ke bajaye "mein" lagaiye
"aapko" ke bajaye "mujhe" lagaiye 
"aapke" ke bajaye "mera" ...ish tarh se
mein chahta hun ki samvad (conversation) mein doosre vyakti ke bajaye Mujhe khud ko kendrit kiya jaye.
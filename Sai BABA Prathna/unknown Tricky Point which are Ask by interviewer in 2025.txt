Q: Interviewer pooch raha hai ki JVM mein kaun-kaun se memory locations hote hain? Unhe samjhaiye.
Ans: JVM memory architecture ko 5 mukhya (main) hisson mein baanta gaya hai:
Heap Area:- Yeh JVM ka sabse bada memory area hai. Aap new keyword se jo bhi object banate hain (e.g., new Student()), woh yahin banta hai. Yeh saare threads ke beech shared hota hai. Garbage Collector (GC) isi area mein kaam karta hai.
Analogy: Ek bada godown (warehouse) jahan saara samaan (objects) rakha jaata hai.
Stack Area:- Har thread ka apna alag-alag Stack hota hai. Jab bhi koi method call hota hai, ek naya "frame" is stack mein add ho jaata hai. Is frame mein local variables (jaise int i = 10;) aur method parameters store hote hain. Jaise hi method khatam hota hai, frame nikal jaata hai.
Analogy: Ek ke upar ek rakhi hui plates. Nayi plate (method call) upar rakhi, kaam khatam hone par upar se hata li.
Method Area:- (Java 8 se Metaspace): Yeh bhi sabhi threads ke liye shared area hai. Yahan class ka structure (metadata) store hota hai — jaise class ka naam, uske methods ka code, aur static variables.
Analogy: Ek library ka index card system, jo batata hai ki kaun si kitaab (class) kaisi hai aur kahan rakhi hai.
PC (Program Counter) Registers:- Har thread ka apna ek PC Register hota hai. Yeh bahut chhota hota hai aur iska kaam sirf yeh track karna hai ki abhi kaunsi line of code (instruction) execute ho rahi hai.
Analogy: Ek kitaab mein rakha hua bookmark jo batata hai ki aap abhi kaun sa page padh rahe hain.
Native Method Stack:- Yeh Java ke Stack jaisa hi hai, lekin yeh Native Code (jo C/C++ jaisi language mein likha hota hai) ke liye use hota hai. Har thread ka apna Native Method Stack hota hai.
Tricky Point (2025): Interviewer aapko definition batane ke baad ek simple line of code dekar confuse karega:
"Toh agar mein likhta hoon: void myMethod() { Employee emp = new Employee(); } — ismein 'emp' kahan jaayega aur 'new Employee()' kahan?"
Yahan aapka asli test hai. Sahi jawab hai:
emp (reference variable): Yeh ek local variable hai, isliye yeh myMethod ke frame ke andar Stack par jaayega.
new Employee() (actual object): Yeh ek object hai, isliye yeh Heap memory mein banega.
Stack par rakha hua emp variable Heap mein bane object ka memory address hold karega. Interviewer yeh dekhna chahta hai ki aap "reference" aur "object" ke beech ka fark jaante hain ya nahi.

/\
|
|
|
|
|
Upar ke jese same pattern ko use karte huye niche ke Questions ko sankhep mei samjhaye.

```
JVM mein kaun-kaun se memory locations hote hain?
```